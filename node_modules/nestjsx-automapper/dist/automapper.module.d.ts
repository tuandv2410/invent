import { AutoMapperGlobalSettings } from '@nartc/automapper';
import { DynamicModule } from '@nestjs/common';
import { OnModuleInit } from '@nestjs/common/interfaces';
import { AutomapperExplorer } from './automapper.explorer';
import { AutomapperModuleRootOptions } from './interfaces';
export declare class AutomapperModule implements OnModuleInit {
    private readonly explorer;
    private static readonly logger;
    /**
     * Initialize a Mapper with name and globalSettings
     *
     * @param {string} name - name of the Mapper instance. Default to 'default'
     * @param {AutoMapperGlobalSettings} globalSettings - Global Settings for the current Mapper instance
     */
    static withMapper(name?: string, globalSettings?: AutoMapperGlobalSettings): DynamicModule;
    static withMapper(globalSettings?: AutoMapperGlobalSettings): DynamicModule;
    /**
     * Initialize an AutoMapper instance with a name. Default to "default"
     *
     * Generally, `forRoot` only needs to be ran once to provide a singleton for the whole application
     *
     * @param {AutomapperModuleRootOptions} options
     * @deprecated Please use withMapper instead
     */
    static forRoot(options?: AutomapperModuleRootOptions): DynamicModule;
    constructor(explorer: AutomapperExplorer);
    onModuleInit(): void;
}
